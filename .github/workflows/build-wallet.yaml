name: Build Crystal Bitoreum Wallet (Linux Only)

on:
  push:
    branches:
      - 4.0.0.0
  workflow_dispatch:

jobs:
  build-linux:
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04]
        arch: [x86_64, aarch64]
    runs-on: ${{ matrix.os }}
    name: Build ${{ matrix.arch }} on ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up QEMU for ARM emulation
      if: matrix.arch == 'aarch64'
      uses: docker/setup-qemu-action@v3
      with:
        platforms: all

    - name: Install build dependencies
      run: |
        sudo dpkg --add-architecture arm64
        sudo apt update
        sudo apt install -y \
          git curl build-essential libtool autotools-dev automake \
          pkg-config python3 bsdmainutils cmake libdb-dev libdb++-dev \
          screen zlib1g-dev wget

    - name: Build Python 3.10.17 from source
      run: |
        cd /usr/src
        sudo wget https://www.python.org/ftp/python/3.10.17/Python-3.10.17.tgz
        sudo tar xzf Python-3.10.17.tgz
        cd Python-3.10.17
        sudo ./configure --enable-optimizations
        sudo make -j$(nproc)
        sudo make altinstall
        echo "alias python=python3.10" >> ~/.bashrc
        echo "alias python3=python3.10" >> ~/.bashrc
        export PATH="/usr/bin:$PATH"
        python3.10 --version

    - name: Set HOST and build depends
      run: |
        if [[ "${{ matrix.arch }}" == "x86_64" ]]; then
          export HOST=x86_64-pc-linux-gnu
        elif [[ "${{ matrix.arch }}" == "aarch64" ]]; then
          export HOST=aarch64-linux-gnu
        else
          echo "Unsupported architecture: ${{ matrix.arch }}"
          exit 1
        fi
        echo "HOST=$HOST" >> $GITHUB_ENV
        cd depends
        make -j$(nproc) HOST=$HOST

    - name: Verify GMP and other depends outputs
      run: |
        echo "Checking for GMP in depends output..."
        find depends/${HOST} -name 'gmp*' || echo "GMP not found in depends output"

    - name: Autogen and configure (release)
      run: |
        ./autogen.sh
        ./configure --prefix=`pwd`/depends/${HOST} \
          CPPFLAGS="-I`pwd`/depends/${HOST}/include" \
          LDFLAGS="-L`pwd`/depends/${HOST}/lib"

    - name: Build wallet (release)
      run: |
        make -j$(nproc)

    - name: Collect and strip binaries
      run: |
        VERSION=4.0.0.0
        COIN_NAME=bitoreum
        BUILD_DIR=~/bitoreum-build/build
        COMPRESS_DIR=~/bitoreum-build/compressed

        mkdir -p ${BUILD_DIR} ${BUILD_DIR}_not_strip ${BUILD_DIR}_debug $COMPRESS_DIR

        cp src/{bitoreum-cli,bitoreumd,bitoreum-tx,qt/bitoreum-qt} $BUILD_DIR
        cp src/{bitoreum-cli,bitoreumd,bitoreum-tx,qt/bitoreum-qt} $BUILD_DIR_not_strip
        strip $BUILD_DIR/*

    - name: Configure and build (debug)
      run: |
        make clean && make distclean
        ./autogen.sh
        ./configure --prefix=`pwd`/depends/${HOST} --disable-tests --enable-debug \
          CPPFLAGS="-I`pwd`/depends/${HOST}/include" \
          LDFLAGS="-L`pwd`/depends/${HOST}/lib"
        make -j$(nproc)
        cp src/{bitoreum-cli,bitoreumd,qt/bitoreum-qt} ~/bitoreum-build/build_debug/

    - name: Package binaries and generate checksums
      run: |
        VERSION=4.0.0.0
        COIN_NAME=bitoreum
        BUILD_DIR=~/bitoreum-build/build
        COMPRESS_DIR=~/bitoreum-build/compressed
        ARCH_TYPE=${{ matrix.arch }}
        OS=${{ matrix.os }}

        for type in "" "_debug" "_not_strip"; do
          DIR="${BUILD_DIR}${type}"
          FILENAME="${COIN_NAME}-${OS}_${ARCH_TYPE}${type//_/-}-${VERSION}.tar.gz"
          cd "$DIR"
          echo "sha256:" > checksums.txt
          echo "------------------------------------" >> checksums.txt
          shasum * >> checksums.txt
          echo "------------------------------------" >> checksums.txt
          echo "openssl-sha256:" >> checksums.txt
          echo "------------------------------------" >> checksums.txt
          sha256sum * >> checksums.txt
          tar -cf - -C "$DIR" . | gzip -9 > "$COMPRESS_DIR/$FILENAME"
        done

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: bitoreum-${{ matrix.os }}-${{ matrix.arch }}
        path: ~/bitoreum-build/compressed/*.tar.gz
