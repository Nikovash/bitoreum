name: Build Bitoreum Wallet

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 4.0.0.0

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x86_64
            host: x86_64-pc-linux-gnu

          - os: ubuntu-22.04
            arch: arm64
            host: aarch64-linux-gnu

          - os: ubuntu-24.04
            arch: x86_64
            host: x86_64-pc-linux-gnu

          - os: ubuntu-24.04
            arch: arm64
            host: aarch64-linux-gnu

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt update && sudo apt install -y \
            git curl build-essential libtool autotools-dev automake pkg-config \
            bsdmainutils cmake libdb-dev libdb++-dev zlib1g-dev python3 \
            g++-aarch64-linux-gnu binutils-aarch64-linux-gnu zip

      - name: Install Python 3.10
        run: |
          cd /usr/src
          sudo wget https://www.python.org/ftp/python/3.10.17/Python-3.10.17.tgz
          sudo tar xzf Python-3.10.17.tgz
          cd Python-3.10.17
          sudo ./configure --enable-optimizations
          sudo make -j$(nproc)
          sudo make altinstall

      - name: Clone & Build Depends
        run: |
          mkdir -p ~/bitoreum-build
          cd ~/bitoreum-build
          git clone https://github.com/Nikovash/bitoreum -b 4.0.0.0
          cd bitoreum/depends
          make -j$(nproc) HOST=${{ matrix.host }}

      - name: Configure & Build Wallet
        run: |
          cd ~/bitoreum-build/bitoreum
          ./autogen.sh
          ./configure --prefix=$(pwd)/depends/${{ matrix.host }} --host=${{ matrix.host }}
          make -j$(nproc)

      - name: Package Wallet
        run: |
          VERSION=4.0.0.0
          COIN_NAME=bitoreum
          BUILD_DIR="$HOME/bitoreum-build/build"
          COMPRESS_DIR="$HOME/bitoreum-build/compressed"
          OS_NAME="${{ matrix.os }}-${{ matrix.arch }}"

          mkdir -p "$BUILD_DIR" "$COMPRESS_DIR"

          cp src/bitoreum* "$BUILD_DIR" 2>/dev/null || true
          cp src/qt/bitoreum-qt* "$BUILD_DIR" 2>/dev/null || true

          cd "$BUILD_DIR"
          echo "sha256:" > checksums.txt
          echo "------------------------------------" >> checksums.txt
          (sha256sum * 2>/dev/null || shasum * ) >> checksums.txt

          TAR_NAME="${COIN_NAME}-${OS_NAME}-${VERSION}.tar.gz"
          tar -czf "$COMPRESS_DIR/$TAR_NAME" ./*

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bitoreum-${{ matrix.os }}-${{ matrix.arch }}
          path: ~/bitoreum-build/compressed/*

  build-macos-12:
    name: macOS 12 Build
    needs: get-version
    runs-on: macos-12

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Required Packages
        run: |
          brew install automake libtool pkg-config miniupnpc librsvg libnatpmp zeromq python
          pip3 install ds_store mac_alias
          pip3 install -U pip setuptools 

      - name: Build Depends
        run: |
          echo "building with $(nproc) threads"
          make -C depends -j$(nproc) HOST=x86_64-apple-darwin20.6.0

      - name: Configure
        run: |
          ./autogen.sh
          ./configure --prefix=`pwd`/depends/x86_64-apple-darwin20.6.0

      - name: Build Binaries
        run: |
          make -j$(nproc)
          mkdir -p ${BUILD_DIR} ${BUILD_DIR}_not_strip ${TEST_DIR}
          cp src/{bitoreum-cli,bitoreumd,qt/bitoreum-qt} ${BUILD_DIR}/
          mv src/{bitoreum-cli,bitoreumd,qt/bitoreum-qt} ${BUILD_DIR}_not_strip/
          mv src/test/test_bitoreum ${TEST_DIR}
          strip ${BUILD_DIR}/*

      - name: Generate Checksum and Compress
        run: |
          cd ${BUILD_DIR}
          echo "sha256:" >> checksums.txt
          echo "------------------------------------" >> checksums.txt
          shasum * >> checksums.txt
          echo "------------------------------------" >> checksums.txt
          echo "openssl-sha256:" >> checksums.txt
          echo "------------------------------------" >> checksums.txt
          openssl sha256 * >> checksums.txt
          cat checksums.txt
          tar -cvzf ../${COIN_NAME}-macos-x86-${{ needs.get-version.outputs.version }}.tar.gz ../${BUILD_DIR}/*
          cd ../${BUILD_DIR}_not_strip
          echo "sha256:" >> checksums.txt
          echo "------------------------------------" >> checksums.txt
          shasum * >> checksums.txt
          echo "------------------------------------" >> checksums.txt
          echo "openssl-sha256:" >> checksums.txt
          echo "------------------------------------" >> checksums.txt
          openssl sha256 * >> checksums.txt
          cat checksums.txt
          tar -cvzf ../${COIN_NAME}-macos-x86-not_strip-${{ needs.get-version.outputs.version }}.tar.gz *
          cd ..
          mkdir -p ${COMPRESS_DIR}
          mv *.tar.gz ${COMPRESS_DIR}/
          cd ${COMPRESS_DIR}
          echo "sha256: `shasum ${COIN_NAME}-macos-x86-${{ needs.get-version.outputs.version }}.tar.gz`" >> checksums.txt
          echo "openssl-sha256: `openssl sha256 ${COIN_NAME}-macos-x86-${{ needs.get-version.outputs.version }}.tar.gz`" >> checksums.txt
          echo "sha256: `shasum ${COIN_NAME}-macos-x86-not_strip-${{ needs.get-version.outputs.version }}.tar.gz`" >> checksums.txt
          echo "openssl-sha256: `openssl sha256 ${COIN_NAME}-macos-x86-not_strip-${{ needs.get-version.outputs.version }}.tar.gz`" >> checksums.txt
          cat checksums.txt
          cd ..

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.COIN_NAME }}-macos-x86-${{ needs.get-version.outputs.version }}
          path: ${{ env.COMPRESS_DIR }}

      - name: Upload Test Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.COIN_NAME }}-macos-x86-test-${{ needs.get-version.outputs.version }}
          path: ${{ env.TEST_DIR }}

      - name: Generate Macos dmg files
        run: |
          make deploy
          mkdir -p macos-dmg
          mv Bitoreum-Qt.dmg macos-dmg/
          cd macos-dmg
          echo "sha256: `shasum bitoreum-Qt.dmg`" >> checksums.txt
          echo "openssl-sha256: `openssl sha256 bitoreum-Qt.dmg`" >> checksums.txt
          cd ..

      - name: Upload dmg file
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.COIN_NAME }}macos-x86-dmg-${{ needs.get-version.outputs.version }}
          path: macos-dmg
