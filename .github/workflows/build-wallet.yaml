name: Crystal Bitoreum Build

on:
  push:
    branches:
      - main
      - 4.0*
      - dev
  pull_request:
    branches:
      - dev
  workflow_dispatch:

env:
  COIN_NAME: bitoreum
  BUILD_DIR: bitoreum-build
  COMPRESS_DIR: bitoreum-compress
  TEST_DIR: bitoreum-test

permissions:
  contents: read
  checks: write
  id-token: write

jobs:
  get-version:
    name: Get Version
    runs-on: ubuntu-latest
    steps:
      - name: Triggered By
        run: |
          echo "checking out $GITHUB_REF triggered by $GITHUB_EVENT_NAME"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate version manually
        id: selected-version
        run: |
          VERSION=4.0.0.0
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "BUILD_VERSION=$VERSION" > version.txt

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: version
          path: version.txt

    outputs:
      version: ${{ steps.selected-version.outputs.version }}

  build-ubuntu24:
    name: Ubuntu 24 Build
    needs: get-version
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Required Packages
        run: |
          sudo apt-get update -y
          sudo apt-get install -y curl build-essential libtool autotools-dev automake pkg-config python3 bsdmainutils cmake

      - name: Build Depends
        run: |
          echo "building with $(nproc) threads"
          make -C depends -j$(nproc) HOST=x86_64-pc-linux-gnu

      - name: Configure
        run: |
          ./autogen.sh
          ./configure --prefix=`pwd`/depends/x86_64-pc-linux-gnu

      - name: Build Binaries
        run: |
          make -j$(nproc)
          mkdir -p ${BUILD_DIR} ${BUILD_DIR}_not_strip ${TEST_DIR}
          cp src/{bitoreum-cli,bitoreumd,qt/bitoreum-qt} ${BUILD_DIR}/
          cp src/{bitoreum-cli,bitoreumd,qt/bitoreum-qt} ${BUILD_DIR}_not_strip/
          strip ${BUILD_DIR}/*

      - name: Build Debug Binaries
        run: |
          make clean
          make distclean
          ./autogen.sh
          ./configure --prefix=`pwd`/depends/x86_64-pc-linux-gnu --disable-tests --enable-debug
          make -j$(nproc)
          mkdir -p ${BUILD_DIR}_debug
          cp src/{bitoreum-cli,bitoreumd,qt/bitoreum-qt} ${BUILD_DIR}_debug/

      - name: Generate Checksum and Compress
        run: |
          mkdir -p ${COMPRESS_DIR}
          for dir in "${BUILD_DIR}" "${BUILD_DIR}_debug" "${BUILD_DIR}_not_strip"; do
            cd $dir
            echo "sha256:" > checksums.txt
            echo "------------------------------------" >> checksums.txt
            shasum * >> checksums.txt
            echo "------------------------------------" >> checksums.txt
            echo "openssl-sha256:" >> checksums.txt
            echo "------------------------------------" >> checksums.txt
            sha256sum * >> checksums.txt
            cat checksums.txt
            base=$(basename $dir)
            tar -czf ../${COIN_NAME}-ubuntu24-${base##*-}-${{ needs.get-version.outputs.version }}.tar.gz *
            cd ..
          done
          mv *.tar.gz ${COMPRESS_DIR}/
          cd ${COMPRESS_DIR}
          for f in *.tar.gz; do
            echo "sha256: $(shasum $f)" >> checksums.txt
            echo "openssl-sha256: $(sha256sum $f)" >> checksums.txt
          done
          cat checksums.txt

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.COIN_NAME }}-ubuntu24-${{ needs.get-version.outputs.version }}
          path: ${{ env.COMPRESS_DIR }}

      - name: Upload Test Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.COIN_NAME }}-ubuntu24-test-${{ needs.get-version.outputs.version }}
          path: ${{ env.TEST_DIR }}

  build-ubuntu22:
    name: Ubuntu 22 Build
    needs: get-version
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Required Packages
        run: |
          sudo apt-get update -y
          sudo apt-get install -y curl build-essential libtool autotools-dev automake pkg-config python3 bsdmainutils cmake

      - name: Build Depends
        run: |
          echo "building with $(nproc) threads"
          make -C depends -j$(nproc) HOST=x86_64-pc-linux-gnu

      - name: Configure
        run: |
          ./autogen.sh
          ./configure --prefix=`pwd`/depends/x86_64-pc-linux-gnu

      - name: Build Binaries
        run: |
          make -j$(nproc)
          mkdir -p ${BUILD_DIR} ${BUILD_DIR}_not_strip ${TEST_DIR}
          cp src/{bitoreum-cli,bitoreumd,qt/bitoreum-qt} ${BUILD_DIR}/
          cp src/{bitoreum-cli,bitoreumd,qt/bitoreum-qt} ${BUILD_DIR}_not_strip/
          strip ${BUILD_DIR}/*

      - name: Build Debug Binaries
        run: |
          make clean
          make distclean
          ./autogen.sh
          ./configure --prefix=`pwd`/depends/x86_64-pc-linux-gnu --disable-tests --enable-debug
          make -j$(nproc)
          mkdir -p ${BUILD_DIR}_debug
          cp src/{bitoreum-cli,bitoreumd,qt/bitoreum-qt} ${BUILD_DIR}_debug/

      - name: Generate Checksum and Compress
        run: |
          mkdir -p ${COMPRESS_DIR}
          for dir in "${BUILD_DIR}" "${BUILD_DIR}_debug" "${BUILD_DIR}_not_strip"; do
            cd $dir
            echo "sha256:" > checksums.txt
            echo "------------------------------------" >> checksums.txt
            shasum * >> checksums.txt
            echo "------------------------------------" >> checksums.txt
            echo "openssl-sha256:" >> checksums.txt
            echo "------------------------------------" >> checksums.txt
            sha256sum * >> checksums.txt
            cat checksums.txt
            base=$(basename $dir)
            tar -czf ../${COIN_NAME}-ubuntu22-${base##*-}-${{ needs.get-version.outputs.version }}.tar.gz *
            cd ..
          done
          mv *.tar.gz ${COMPRESS_DIR}/
          cd ${COMPRESS_DIR}
          for f in *.tar.gz; do
            echo "sha256: $(shasum $f)" >> checksums.txt
            echo "openssl-sha256: $(sha256sum $f)" >> checksums.txt
          done
          cat checksums.txt

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.COIN_NAME }}-ubuntu22-${{ needs.get-version.outputs.version }}
          path: ${{ env.COMPRESS_DIR }}

      - name: Upload Test Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.COIN_NAME }}-ubuntu22-test-${{ needs.get-version.outputs.version }}
          path: ${{ env.TEST_DIR }}
